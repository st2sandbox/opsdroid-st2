[anonymous-telemetry]
# This is opt-in by default, but we explicitly disable here as well.
enabled = false
# repo_id here allows individuals to opt-in on their machine
# To opt-in, use ~/.pants.rc or envrc to set [anonymous-telemetry].enabled=true
repo_id = "b56223e2-4201-4a35-9044-4114390a8646"
# uuid generated by https://www.uuidgenerator.net/

[GLOBAL]
pants_version = "2.7.1rc1"
#pythonpath = ["%(buildroot)s/pants-plugins"]
backend_packages = [
  # python
  "pants.backend.python",
  "pants.backend.python.mixed_interpreter_constraints",
  "pants.backend.python.lint.bandit",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.docformatter",
  "pants.backend.python.lint.flake8",
  "pants.backend.python.lint.isort",
  "pants.backend.python.typecheck.mypy",

  # shell
  "pants.backend.shell",
  "pants.backend.shell.lint.shfmt",
  "pants.backend.shell.lint.shellcheck",

  # internal plugins in pants-plugins/
  # ...
]

[source]
root_patterns = [
  "/",
  "src",
]

[python-setup]
resolver_version = "pip-2020-resolver"
# experimental_lockfile = "lockfiles/opsdroid-st2"
interpreter_constraints = [
  // OpsDroid requires python 3.7 or 3.8
  // StackStorm requires python 3.6 or 3.8
  // so we only target 3.8 here.
  "CPython==3.8.*",
]

[python-infer]
inits = true

[bandit]
lockfile = "lockfiles/bandit"
version = "bandit==1.7.0"
args = [
  "-lll",  # only HIGH severity level
  "--exclude",
  "build,dist",
]

[black]
lockfile = "lockfiles/black"
version = "black==20.8b1"

[flake8]
lockfile = "lockfiles/flake8"
version = "flake8>=3.7.9,<3.9"
#extra_requirements = [
#  # license check plugin
#  "st2flake8==0.1.0",
#]
#config = ""

[pytest]
lockfile = "lockfiles/pytest"
version = "pytest>=6.0.1,<6.3"
extra_requirements.add = [
  "pytest-benchmark[histogram]==3.4.1",
  #"pytest-timer[colorama]",  # report test timing (--with-timer ala nose-timer)
  "pytest-icdiff",  # make diff output easier to read
  "pygments",  # highlight code in tracebacks

  # other possible plugins
  #"pytest-timeout",  # time limit on tests
  #"pytest-cov",  # coverage
  #"pytest-mock",  # more convenient mocking

  # do not add: xdist (pants runs tests in parallel already)
]
args = [
  "--no-header",  # don't print pytest version for every tested file
]
execution_slot_var = "ST2TESTS_PARALLEL_SLOT"

[subprocess-environment]
env_vars.add = [
  # vars to trigger injecting pydevd-pycharm
  "ST2_PYCHARM_DEBUG",
  "ST2_PYCHARM_DEBUG_HOST",
  "ST2_PYCHARM_DEBUG_PORT",
  # For users testing with python from XCode, make sure to export ARCHFLAGS
  # see: https://github.com/pantsbuild/pants/pull/11733
  "ARCHFLAGS",
]
