[anonymous-telemetry]
# This is opt-in by default, but we explicitly disable here as well.
enabled = false
# repo_id here allows individuals to opt-in on their machine
# To opt-in, use ~/.pants.rc or envrc to set [anonymous-telemetry].enabled=true
repo_id = "b56223e2-4201-4a35-9044-4114390a8646"
# uuid generated by https://www.uuidgenerator.net/

[GLOBAL]
pants_version = "2.25.0rc1"
#pythonpath = ["%(buildroot)s/pants-plugins"]
backend_packages = [
  # https://www.pantsbuild.org/stable/docs/using-pants/validating-dependencies
  "pants.backend.experimental.visibility",

  # python
  "pants.backend.python",
  "pants.backend.python.mixed_interpreter_constraints",
  "pants.backend.python.lint.bandit",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.docformatter",
  "pants.backend.python.lint.flake8",
  "pants.backend.python.lint.isort",
  # mypy is slow. enable after this is fixed:
  # https://github.com/pantsbuild/pants/issues/10864
  #"pants.backend.python.typecheck.mypy",
  # pylint is slow and painful. don't bother.

  # shell
  "pants.backend.shell",
  "pants.backend.shell.lint.shfmt",
  "pants.backend.shell.lint.shellcheck",

  # docker
  "pants.backend.docker",
  "pants.backend.docker.lint.hadolint",

  # internal plugins in pants-plugins/
  # ...
]

[source]
root_patterns = [
  "/",
  "/src",
]

# DEFAULT has values that we can reuse/interpolate below
[DEFAULT]
# OpsDroid requires python 3.11-3.13
# StackStorm requires python 3.8-3.11
# so we only target 3.11 here.
st2_interpreter_constraints = "CPython>=3.11,<3.12"
tool_interpreter_constraints = "CPython>=3.11,<3.12"

[python]
enable_resolves = true
default_resolve = "st2"
interpreter_constraints = ["%(st2_interpreter_constraints)s"]

[python.resolves]
# st2 is the primary resolve
st2 = "build-support/lockfiles/opsdroid-st2.lock"
# tool and misc other resolves (for most, see //BUILD.tools)
bandit = "build-support/lockfiles/bandit.lock"
black = "build-support/lockfiles/black.lock"
docformatter = "build-support/lockfiles/docformatter.lock"
flake8 = "build-support/lockfiles/flake8.lock"
isort = "build-support/lockfiles/isort.lock"

[python.resolves_to_interpreter_constraints]
bandit = ["%(tool_interpreter_constraints)s"]
black = ["%(tool_interpreter_constraints)s"]
docformatter = ["%(tool_interpreter_constraints)s"]
flake8 = ["%(tool_interpreter_constraints)s"]
isort = ["%(tool_interpreter_constraints)s"]

#[python.resolves_to_constraints_file]
# Our direct requirements are in requirements-pants.txt;
# put indirect/transitive version constraints here:
#st2 = "lockfiles/st2-constraints.txt"

[export]
# see https://github.com/StackStorm/st2/blob/master/pants.toml
py_editable_in_resolve = ["st2"]
py_resolve_format = "mutable_virtualenv"
py_non_hermetic_scripts_in_resolve = ["st2"]
py_generated_sources_in_resolve = ["st2"]

[python-infer]
# see https://github.com/StackStorm/st2/blob/master/pants.toml
string_imports = true
string_imports_min_dots = 1
unowned_dependency_behavior = "ignore"
ambiguity_resolution = "by_source_root"

[setup-py-generation]
# when building the package (with `pants package ::`), pants will,
# by default, generate a setup.py file for use with setuptools.
generate_setup_default = true # true by default

[bandit]
args = [
  "--exclude",
  "build,dist",
  "--quiet",
]
install_from_resolve = "bandit"

[black]
install_from_resolve = "black"

[docformatter]
install_from_resolve = "docformatter"

[flake8]
install_from_resolve = "flake8"
config = "build-support/.flake8"

[generate-lockfiles]
diff = true

[isort]
install_from_resolve = "isort"

[pytest]
install_from_resolve = "st2"
args = [
  "--no-header",  # don't print pytest version for every tested file
]
execution_slot_var = "ST2TESTS_PARALLEL_SLOT"

[setuptools]
install_from_resolve = "st2"

[shfmt]
args = [
  # https://github.com/mvdan/sh/blob/master/cmd/shfmt/shfmt.1.scd#printer-flags
  "--indent=4", # default is 0 (use tabs)
  "--case-indent",
]

[test]
extra_env_vars = [
  # vars to trigger injecting pydevd-pycharm
  "ST2TESTS_*",
  "ST2_CI*",
]
# 10 min should be more than enough even for integration tests.
timeout_default = 600 # seconds

[cli.alias]
--all-changed = "--changed-since=HEAD --changed-dependents=transitive"
