---
name: Pants Test

on:
  push:
    branches:
      # only on merges to main branch
      - main
      # and version branches, which only include minor versions (eg: v3.4)
      - v[0-9]+.[0-9]+
    tags:
      # also version tags, which include bugfix releases (eg: v3.4.0)
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:
    type: [opened, reopened, edited]
    branches:
      # Only for PRs targeting these branches
      - main
      - v[0-9]+.[0-9]+
#  schedule:
#    # run every night at midnight
#    - cron:  '0 0 * * *'

env:
  COLUMNS: '120'

  # Tell StackStorm that we are indeed in CI mode, using our CI-provider agnostic var.
  ST2_CI: 'true'

jobs:
  # Lint checks which don't depend on any service containers, etc. to be running.
  tests:
    name: 'Test - Python ${{ matrix.python-version-short }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # NOTE: We need to use full Python version as part of Python deps cache key otherwise
        # setup virtualenv step will fail.
        python:
          - {version-short: '3.11', version: '3.11.11'}

    services:
      mongo:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 'Set up Python (${{ matrix.python.version }})'
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python.version }}'

      - name: Initialize Pants and its GHA caches
        uses: ./.github/actions/init-pants
        with:
          # To ignore a bad cache, bump the cache* integer.
          gha-cache-key: cache0-py${{ matrix.python.version }}

      - name: Get Pants Cache Merge Base Commit (base branch commit to pull cache from)
        id: pants-cache-commit
        run: |
          COMMIT=$(git merge-base ${GITHUB_BASE_REF:-main} HEAD | head -n1)
          echo MERGEBASE=${COMMIT}
          echo "::set-output name=MERGEBASE::${COMMIT}"

      - name: Test
        run: >
          pants
          --python-bootstrap-search-path=[]
          --python-bootstrap-search-path=${{ steps.python.outputs.python-path }}
          test '::'

      - name: Upload pants log
        uses: actions/upload-artifact@v4
        with:
          name: pants-log-py${{ matrix.python.version }}-tests
          path: .pants.d/pants.log
        if: always()  # We want the log even on failures.

  set_merge_ok:
    name: Set Merge OK (Tests)
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    needs:
      - tests
    outputs:
      merge_ok: ${{ steps.set_merge_ok.outputs.merge_ok }}
    runs-on: ubuntu-latest
    steps:
      - id: set_merge_ok
        run: echo 'merge_ok=true' >> ${GITHUB_OUTPUT}

  merge_ok:
    name: Merge OK (Tests)
    if: always()
    needs:
      - set_merge_ok
    runs-on: ubuntu-latest
    steps:
      - run: |
          merge_ok="${{ needs.set_merge_ok.outputs.merge_ok }}"
          if [[ "${merge_ok}" == "true" ]]; then
            echo "Merge OK"
            exit 0
          else
            echo "Merge NOT OK"
            exit 1
          fi
